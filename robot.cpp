/////////////////////////////////////////////////////////////////////
//
// Name: Jofred Gonzalez
// Date: 11/7/22
// Class: CSCI 1170.03
// Semester: Fall 2022
// CSCI/CMPE 1370 Instructor: Gustavo Dietrich
//
// Program Description: This program prompts the user for a seed. Either the seed is between 1000 - 4000 or it is 0. If between the range the random number will be a constant. If the seed is entered as 0, the random number will be completely random. After this prompt the user is asked to guess the number the computer randonly picked between 1-100. The user gets 5 chances to guess right while being given hints as to whether the number they enter is too high or low. If the user loses the program outputs the randomly generated number, and continues to the next program.
//
//After that portion of the program. The computer plays a Pig roll game rolling a die until it gets a number greater than 20.
// 
//
/////////////////////////////////////////////////////////////////////

#include<iostream>
#include<string>
#include<cstdlib>
#include<time.h>
#include<fstream>
#include<dos.h>
#include<chrono>
#include<thread>
// Function prototypes
int randNumGen(int upper, int lower);
int getSeed();
void guessNumber();


using namespace std;
using namespace std::chrono_literals;

int main()
{
  int wait;
  int f;
  for (f = 0; f < 100; f++) {
    std::this_thread::sleep_for(1s);
	  guessNumber();
    
}
}
//************************  Function definitions  *************************
// Read the handout carefully for detailed description of the functions that you have to implement

// This function generates a random number within a specified range.
// It receives two whole numbers : the first one is the upper boundary and
// the second one is the lower boundary used to generate the random number.
// Returns the random number generated using expression 2) on my handout

int randNumGen(int upper, int lower)	// function heading
{										// function body
	return ( rand() % (upper - lower + 1) ) + lower;

}

// This function prompts the user to enter a seed (a whole number) equal to zero (0) or 
// within the range 1000..4000. If the user enters a valid value the function returns 
// the value. Otherwise it keeps asking for the seed.
// Use a DO-WHILE-LOOP to implement this function

int getSeed()
{
	// Declare variable seed
  int seed;
	// 
	// Use a Do-While-Loop to ensure the user enters a valid seed
do{
  cout << endl << "Enter a seed equal to 0 or within the range 1000-4000: ";
  /////////////kiron modification cin >> seed;
  seed = 0;
  if(seed == 0){
    seed = 0;
    break;
  }
  else if(seed < 1000 || seed > 4000){
  cout << endl << "Sorry your seed is invalid" << endl;
  }
} while(seed < 1000 || seed > 4000);
  
	// Return the seed
	return seed;
}

// This function generates a number and gives the user five chances to guess it.
// As the user provides a guess the program indicates whether the guess was correct
// or if it was too low or too high to help her/him.
// If the user runs out of guesses it shows her/him the number
// MUST use a FOR-LOOP to implement this function

void guessNumber()
{
  fstream fout;
  fout.open("data_of_guesses_from_several_games.csv", ios::out | ios::app);
	// Declare variable num to hold the random number generated by the program
  int num;
	// Declare variable seed to get the seed specified by the user
  int seed;
	// Declare variable guess to hold the user's guess
  int guess;
	// Declare variable i to control the counter-controlled loop
	int i;
  
	// Display the title with the instructions for the guessing game
	cout << "Thank you for participating in the Guessing Game" << endl << endl;
	cout << "If you want me to create a real random number enter 0 when prompted for the seed please." << endl << endl;
	cout << "Otherwise enter a number within the specified range please." << endl << endl;
  
	// Call function getSeed() to get the seed from the user and assign it to the corresponding variable
  seed = getSeed(); 

  // seed = 0
  
	// If the user entered a zero (0) use srand(static_cast<int> (time(NULL))) to seed
	// the random number generator. Otherwise use srand(seed) where seed represents the value entered by the user
  if (seed == 0){
    srand(static_cast<int>(time(NULL)));
  } else if (seed != 0){
    srand(seed);
  }

	// Call function randNumGen() to generate a random number within the range 1..100
  num = randNumGen(100, 1);
  
	// Use a For-Loop to give the user five (5) chances to guess the number
  for (i = 0; i < 5; ++i){

    cout << endl << endl << "Guess the number the computer randomly picked between 1 - 100: ";
    //////////kiron modification cin >> guess;
    guess = randNumGen(100, 1);
    cout << endl << "The computer guessed: " << guess << endl;
    fout << guess << ",";
    // FIXME: write guess to a txt file.
		// Check if the user has guessed the correct number.
    // If not, tell her/him if his guess is too low or too high
    if (guess < num){
			// Display "sorry, your guess is too low"
      cout << "Sorry, your guess is too low";
    }
    // Otherwise, if the guess is bigger than the number
    else if (guess > num){
			// Display "sorry, your guess is too high"
      cout << "Sorry, your guess is too high";
    }
		// Otherwise
    else{
    // Display "you guessed right, you win!"
    cout << "you guessed right, you win!" << endl << endl;
			// Exit the loop
      fout << num << endl;
      break;
    }
    // If the user lost
  if (i == 4){

		// Display message "Sorry, you lost. The number is: ", num
    cout << endl << endl << "Sorry, you lost. The number is: " << num << endl << endl;
    fout << num << endl;
  }
  }
  
}
